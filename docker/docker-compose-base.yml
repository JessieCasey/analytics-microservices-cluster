services:
  price:
    build: ../microservices/price-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS="-javaagent:/application/BOOT-INF/lib/opentelemetry-javaagent-2.13.3.jar" #maven will place jar in BOOT-INF as per dep mentioned in pom. This will instruct the JVM to run the OpenTelemetry Java agent from the path.
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_METRIC_EXPORT_INTERVAL=15000
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4318
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    networks:
      - shared-network

  gateway-service:
    build: ../spring-cloud/gateway-service
    mem_limit: 512m
    ports:
      - "9000:9000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS="-javaagent:/application/BOOT-INF/lib/opentelemetry-javaagent-2.13.3.jar" #maven will place jar in BOOT-INF as per dep mentioned in pom. This will instruct the JVM to run the OpenTelemetry Java agent from the path.
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_METRIC_EXPORT_INTERVAL=15000
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4318
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    networks:
      - shared-network

networks:
  shared-network:
    driver: bridge